class HelpModule:
    def __init__(self, bot):
        self.bot = bot
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ self.bot.commands –∏ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–ª–æ–≤–∞—Ä–µ–º
        if not hasattr(self.bot, 'commands') or not isinstance(self.bot.commands, dict):
            self.bot.commands = {}  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç

        self.bot.register_command("help", self.help_cmd, "–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥")

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥—É–ª–µ –≤ —Å–ª–æ–≤–∞—Ä—å commands
        self.bot.commands["help"] = {"handler": self.help_cmd, "description": "–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥", "module": "Help"}

        print(f"–ö–æ–º–∞–Ω–¥–∞ help –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞: {self.bot.commands['help']}")  # –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –ø—Ä–∏–Ω—Ç

    async def help_cmd(self, event):
        print("–§—É–Ω–∫—Ü–∏—è help_cmd –≤—ã–∑–≤–∞–Ω–∞")  # –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –ø—Ä–∏–Ω—Ç
        """–ú–µ–Ω—é –ø–æ–º–æ—â–∏ (—Ä–∞–∑–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç)"""

        help_text = "üìö **Commands**\n"  # –ó–∞–≥–æ–ª–æ–≤–æ–∫ (–≤–Ω–µ –±–ª–æ–∫–∞ —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
        help_text += "> -----------------------------\n"
        for cmd, data in sorted(self.bot.commands.items()):
            help_text += f"> ‚ú¶` .{cmd}` - {data['description']}\n"  # –†–∞–∑–¥–µ–ª—è–µ–º –∫–æ–¥ –∏ —Ç–µ–∫—Å—Ç

        help_text += "> -----------------------------\n"
        help_text += "‚ÑπÔ∏è For more details, use .help command"

        await event.edit(help_text) # –£–±–∏—Ä–∞–µ–º parse_mode
def setup(bot):
    HelpModule(bot)